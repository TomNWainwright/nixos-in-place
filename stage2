#!/bin/sh

set -eu

root_mount=$1
root_type=$2
grub_device=$3



## Enable host resolution
cp /etc/external-resolv.conf /etc/resolv.conf

## Install dependencies; it's easier to do this here, in the Nix chroot,
## since we don't rely on the host system.
nix-env -i pcre

## Generate a base config
nixos-generate-config --root /nixos

cat <<EOF > /nixos/etc/nixos/nixos-in-place.nix

{ config, pkgs, ... }:
{
  ## Everything below is generated from nixos-in-place; modify with caution!
  

  networking.hostName = "nixos"; # Define your hostname.
  networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
  i18n = {
     consoleFont = "Lat2-Terminus16";
     consoleKeyMap = "us";
     defaultLocale = "en_GB.UTF-8";
  };
  time.timeZone = "Europe/London";
   environment.systemPackages = with pkgs; [
     wget vim curl kakoune chromium wmctrl xdotool kate git 
  ];
  sound.enable = true;
  hardware.pulseaudio.enable = true;
  services.xserver.libinput.enable = true;
  services.xserver.displayManager.sddm.enable = true;
  services.xserver.desktopManager.plasma5.enable = true;
  boot.kernelParams = ["boot.shell_on_fail"];
  boot.loader.grub.device = "$grub_device";
  boot.loader.grub.storePath = "/nixos/nix/store";
  boot.initrd.supportedFilesystems = [ "$root_type" ];
  boot.initrd.postDeviceCommands = ''
    mkdir -p /mnt-root/old-root ;
    mount -t $root_type $root_mount /mnt-root/old-root ;
  '';
  fileSystems = {
    "/" = {
      device = "/old-root/nixos";
      fsType = "none";
      options = [ "bind" ];
    };
    "/old-root" = {
      device = "$root_mount";
      fsType = "$root_type";
    };
  };
  users.extraUsers.root.password = "nixos";
  $(cat /nixos/extra-config)
}
EOF

## Add in our configuration additions
nixos_dir=/nixos/etc/nixos
cp $nixos_dir/configuration.nix $nixos_dir/backup-configuration.nix
sed -i 's|\(\s*\)\(./hardware-configuration.nix\)|\1\2\n\1./nixos-in-place.nix|' $nixos_dir/configuration.nix

## Enable SSH by default
sed -i 's/# \(services\.openssh\)/\1/' $nixos_dir/configuration.nix

## Remove the automatically-generated fileSystems configuration
mv $nixos_dir/hardware-configuration.nix $nixos_dir/backup-hardware-configuration.nix
pcregrep -Mv "fileSystems.\"/\"[\s\S]*};" $nixos_dir/backup-hardware-configuration.nix > $nixos_dir/hardware-configuration.nix

## Installs grub and a base NixOS system; after a reboot, we're golden
NIXOS_INSTALL_REEXEC=1 nixos-install --root /nixos --show-trace --no-root-passwd
exit





